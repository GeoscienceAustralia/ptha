% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geometric_util.R
\name{approxSpatialLines}
\alias{approxSpatialLines}
\title{Return a set of points with chosen spacing along a SpatialLines object}
\usage{
approxSpatialLines(
  SL,
  spacing = NULL,
  n = NULL,
  longlat = FALSE,
  verbose = FALSE,
  distinguish_disjoint_line_segments = FALSE
)
}
\arguments{
\item{SL}{a SpatialLines object, along which we desire evenly spaced points.}

\item{spacing}{numeric. An approximate spacing between points. Alternatively,
the user may provide 'n' below.}

\item{n}{numeric. The number of points in output (if spacing = NULL)}

\item{longlat}{logical. Is data longlat?}

\item{verbose}{logical. Print progress information}

\item{distinguish_disjoint_line_segments}{logical. If FALSE, then the output
contains an integer for each point, with the corresponding line-index in the SL.
If TRUE, then the latter is replaced with a real-number, defined as
"line-index + (segment_index-1)/(num_segments)", which can be used to
distinguish between disjoint parts of the same line.}
}
\value{
SpatialPointsDataFrame along SL, with data identifying the
corresponding line index in SL
}
\description{
The spacing is calculated with linear interpolation (no great circles), so it
is assumed that the points defining lines in the SpatialLines object SL are
close enough together that 'great circle' and 'euclidean' interpolation 
are practically identical. However, distances are computed assuming longlat 
(and spherical earth) if 'longlat = TRUE'.
}
\details{
The units of spacing depend on the projection of SL, and the value of
longlat.  If longlat=FALSE, spacing is in units of SL's coordinates (e.g.
metres for UTM projections, degrees for longlat projections).  If
longlat=TRUE, SL is in longlat degrees, and spacing is in kilometres
}
