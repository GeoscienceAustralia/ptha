% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_mux.R
\name{read_mux2_data}
\alias{read_mux2_data}
\title{Read mux2 data format}
\usage{
read_mux2_data(
  mux2file,
  inds = NULL,
  return_nstations_only = FALSE,
  file_subtype = "GAR15"
)
}
\arguments{
\item{mux2file}{character. Filename of a mux2 file which is to be read}

\item{inds}{optional integer vector of indicies of stations to keep. This can be 
useful if you want to work on the stations in chunks (e.g. to save memory)}

\item{return_nstations_only}{logical. If TRUE, then return an integer giving
the number of stations in the file FOR WHICH TIMESERIES DATA IS RECORDED.
This might not be the same as the number of stations, because of the 'in_grids'
treatment.}

\item{file_subtype}{string with either 'GAR15' or 'PTHA2008'. The former corresponds
to a version of the mux2 file from 2015, and the latter corresponds to a version that
was used in the 2008 Australian PTHA (at least at some time). The mux2 file format
has been varied over time, so it is possible that neither of these works}
}
\value{
A list with entries mux2file, loc, t, wave, wave_tail which
hold the data from the file
}
\description{
Returns a list with data from mux2 files (an output file format of the URS
tsunami propagation solver). This format binary format consists of \cr
1) A 4byte integer witht the number of stations \cr
2) A (large) table containing location and grid information for all stations.
This includes a flag 'in_grids' which is -1 if the gauge is not in the grid
(in which case its detailed timeseries output is not recorded) \cr
3) A row of 1's (one for each station) \cr
4) A row with -1 and then the number of timesteps for each station \cr
5) A large array with each column giving the stage at each gauge, but the first
column giving the time. Only gauges with ig > -1 are recorded. \cr
}
\examples{
\dontrun{
# Hypothetical system file
filename = "mux2_data_file.mux2"
# Read into a list 'x', access with e.g. x$wave, x$t, etc
x = read_mux2_data(filename)
names(x)
# Example of accessing the table holding the point location information
summary(x$loc)
}

}
