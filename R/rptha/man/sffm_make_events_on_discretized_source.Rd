% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sffm_fit_simulate_earthquake.R
\name{sffm_make_events_on_discretized_source}
\alias{sffm_make_events_on_discretized_source}
\title{Make synthetic finite fault models on a discretized source}
\usage{
sffm_make_events_on_discretized_source(
  discretized_source_statistics,
  target_location,
  target_event_mw,
  num_events = 1,
  vary_peak_slip_location = TRUE,
  vary_peak_slip_alongstrike_downdip_extent = NULL,
  zero_low_slip_cells_fraction = 0,
  sourcename = "",
  sffm_sub_sample_size = c(1, 1),
  mu = 3e+10,
  return_slip_raster = TRUE,
  uniform_slip = FALSE,
  expand_length_if_width_limited = "random",
  use_deterministic_LWkc = FALSE,
  clip_random_parameters_at_2sd = TRUE,
  relation = "Strasser",
  peak_slip_location_near_centre = FALSE
)
}
\arguments{
\item{discretized_source_statistics}{data.frame returned from 
\code{discretized_source_summary_statistics} or
\code{discretized_source_approximate_summary_statistics}}

\item{target_location}{numeric vector c(lon,lat) giving a desired rupture
location. The exact meaning of this location varies, depending on other options below.
In general, we use the target_location to identify a particular unit source (the one
with centre closest to the target_location). But by default the peak slip will be distributed 
stochastically around the latter location, within a region of
approximately (L/2, W/2), where L, W are the length/width of uniform-slip
earthquakes of this magnitude based on Strasser's scaling relations. See the
related options \code{vary_peak_slip_location}, and \code{peak_slip_location_near_centre}.}

\item{target_event_mw}{desired magnitude of the earthquake}

\item{num_events}{number of stochastic slip scenarios to produce.}

\item{vary_peak_slip_location}{If TRUE, vary the peak slip location in a window
around the target_location (more specifically, vary in a window around the
unit source with centre nearest the target location). 
The window in which we vary the location has size of approximately (L/2, W/2), where L, W are the
length/width of uniform-slip earthquakes of this magnitude based on
the provided scaling relation type (default 'Strasser'). If FALSE, make the peak
slip location be the unit source nearest to the target_location, for every synthetic event.}

\item{vary_peak_slip_alongstrike_downdip_extent}{If not NULL, an integer vector of length 4
containing RANGES for the alongstrike number, and downdip number. The peak slip
will be randomly varied in this region (i.e. the idea is to allow the user to
control the size of the region in which the peak slip varies about the target_location). The 
vector should be of the form c(range(alongstrike_number), range(downdip_number)). 
If this option is provided, you must also have vary_peak_slip=TRUE.}

\item{zero_low_slip_cells_fraction}{real between 0 and 1. If > 0,
then we zero all of the smallest slip values, which contribute < 'zero_low_slip_cells_fraction'
to the sum of all slip values on the rupture. A conservative value is 0, 
but small values (e.g. 0.05) might substantially reduce the number of unit-sources
involved in the rupture, with little distortion of the event.}

\item{sourcename}{Name of source (this will be included in output list, and
can be useful for book-keeping)}

\item{sffm_sub_sample_size}{vector of 2 integers. The slip raster is
re-sampled to a higher resolution [sub_sample_size cells in the x/y directions
for each original cell] before generating the sffm, and then re-averaged before
returning the output.}

\item{mu}{shear modulus (Pascals)}

\item{return_slip_raster}{logical. If TRUE, include the slip as a raster object in
the output list. If FALSE, set the latter to NULL on output.}

\item{uniform_slip}{logical. If TRUE, then the slip will be uniform on each rupture.
By default it is FALSE, and stochastic slip is used.}

\item{expand_length_if_width_limited}{logical or character ('random'). This
governs what happens to the rupture length if the desired rupture width was
larger than the available width on the discrete source-zone. For instance, by
Strasser's scaling law, an Mw 9.5 has width which is log-normally
distributed around a median of 283 km. Many source-zones will not have enough
down-dip width to accommodate this. In that case, the width must be equal to
the maximum source-zone width, while the length can either take the original
scaling relation value, (if FALSE), or increase in proportion to the
(desired_width/width) (if TRUE). Alternatively, we can vary randomly between
the latter behaviours with probability 0.5 (if 'random').}

\item{use_deterministic_LWkc}{logical. If FALSE (default), then randomly vary length and width
and corner wavenumbers, using the predictive uncertainty terms in the relevant scaling
relations. (Note the kcx/kcy relations are from Davies et al. (2015), for the S_{NCF} model).
If TRUE, then just use the 'median' scaling relation values, without random variations.}

\item{clip_random_parameters_at_2sd}{logical. If TRUE, then when generating
the random L/W/kcx/kcy, clip values at > 2standard_deviations (or < -2sd) to
their nearest +-2sd counterpart. This will prevent e.g. large earthquakes
occasionally having very narrow width, etc.}

\item{relation}{Scaling relation type, passed to \code{Mw_2_rupture_size}. By
default 'Strasser' is used.}

\item{peak_slip_location_near_centre}{logical If TRUE, then put the 'peak slip location'
near the centre of the rupture. This is probably not a good idea (hence default FALSE),
because to the authors knowledge, real earthquakes do not consistently have the peak 
slip near the centre. But this argument can be useful in some circumstances 
(e.g. to better control the placement of uniform slip events, see examples).}
}
\value{
A list with length = num_events. Each element of the list is a list
containing the entries slip_matrix, slip_raster, initial_moment, peak_slip_ind,
numerical_corner_wavenumbers, which should be self-explanatory if you are
familiary with \code{sffm_simulate}. Note the slip raster is returned for plotting
convenience only - one limitation is that all raster cells are the same size, whereas in
reality the unit-source sizes vary slightly.
}
\description{
Generate stochastic slip models (or uniform slip models) on a discretized source.
Stochastic slip models are generated using the S_{NCF} model from Davies et
al. (2015). The corner wave-number parameters are generated (by default stochastically)
based on the regression relations provided therein. The peak slip location
varies about the target_location, often with some stochasticity, depending
on other arguments. The rupture length and width also vary stochastically
by default.
}
\examples{

# Get source contours
puysegur = readOGR(system.file('extdata/puysegur.shp', package='rptha'), layer='puysegur')
# Get downdip lines
puysegur_downdip = readOGR(system.file('extdata/puysegur_downdip.shp', package='rptha'), 
    layer='puysegur_downdip')
# Make discretized_source
puysegur_discretized_source = discretized_source_from_source_contours(
    source_shapefile=puysegur,
    desired_subfault_length=50,
    desired_subfault_width=50,
    downdip_lines=puysegur_downdip)
# Get unit source summary statistics
puysegur_summary_statistics = discretized_source_summary_statistics(
    puysegur_discretized_source,
    approx_dx=5000,
    approx_dy=5000)

# 1. Make stochastic slip events, with location/magnitude based on 2009/07/15
# puysegur earthquake
puysegur_sffm_event1 = sffm_make_events_on_discretized_source(
    puysegur_summary_statistics,
    target_location = c(166.568, -45.745),
    target_event_mw = 7.8,
    num_events = 10)

# Plot the slip raster for the first 6 synthetic events
par(mfrow=c(3,2))
for(i in 1:6) plot(puysegur_sffm_event1[[i]]$slip_raster)


# 2. Alternative approach using uniform slip
# This example has uniform slip, and keeps the centre of the rupture in nearly the same place,
# but still has variable rupture size
puysegur_sffm_event_unif = sffm_make_events_on_discretized_source(
   puysegur_summary_statistics,
   target_location = c(166.568, -45.745),
   target_event_mw = 7.8,
   vary_peak_slip_location = FALSE,
   num_events = 10,
   uniform_slip=TRUE,
   peak_slip_location_near_centre=TRUE)

# Plot the slip raster for the first 6 synthetic events
par(mfrow=c(3,2))
for(i in 1:6) plot(puysegur_sffm_event_unif[[i]]$slip_raster)

# 3. Another alternative approach using uniform slip.
# This example is like 2 above, except we remove variability in the rupture size.
# We also never expand the length if the width is limited. (We could alternatively always expand
# the length if the width was limited, by setting the corresponding argument to TRUE).
# Note that with this setup, there may be slight randomness IF the rupture length or width 
# includes an even number of unit sources -- because in that case, there is no true 'centre',
# of the rupture based on the unit source count, and so the code will
# randomly choose a centre among one of the equally likely candidates. 
puysegur_sffm_event_unif_fixed = sffm_make_events_on_discretized_source(
   puysegur_summary_statistics,
   target_location = c(166.568, -45.745),
   target_event_mw = 7.8,
   vary_peak_slip_location = FALSE,
   num_events = 10,
   uniform_slip=TRUE,
   expand_length_if_width_limited = FALSE,
   use_deterministic_LWkc = TRUE,
   peak_slip_location_near_centre = TRUE)

# Plot the slip raster for the first 6 synthetic events
par(mfrow=c(3,2))
for(i in 1:6) plot(puysegur_sffm_event_unif_fixed[[i]]$slip_raster)

# 4. Another example with stochastic slip
# Do stochastic slip again, but force them to have peak slip on the top row
puysegur_sffm_event2 = sffm_make_events_on_discretized_source(
    puysegur_summary_statistics,
    target_location = c(166.568, -45.745),
    target_event_mw = 7.8,
    vary_peak_slip_location = TRUE,
    vary_peak_slip_alongstrike_downdip_extent = c(11, 12, 1, 1),
    num_events = 10)

# Plot the slip raster for the first 6 synthetic events
par(mfrow=c(3,2))
for(i in 1:6) plot(puysegur_sffm_event2[[i]]$slip_raster)

}
