% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsunami_arrival_time_fast.R
\name{exceedance_rate_given_maxima_and_arrival_time}
\alias{exceedance_rate_given_maxima_and_arrival_time}
\title{exceedance rate computation}
\usage{
exceedance_rate_given_maxima_and_arrival_time(
  scenario_maxima,
  scenario_arrival_times,
  scenario_rates,
  tsunami_maxima_in_output,
  arrival_times_in_output
)
}
\arguments{
\item{scenario_maxima}{tsunami maxima for all scenarios}

\item{scenario_arrival_times}{tsunami arrival times for all scenarios}

\item{scenario_rates}{individual rates for all scenarios}

\item{tsunami_maxima_in_output}{vector giving the tsunami maxima values for which we will compute exceedance-rates}

\item{arrival_times_in_output}{vector giving tsunami arrival times for which we will compute non-exceedance-rates}
}
\value{
a matrix one row for each tsunami_maxima_in_output, and one column for each arrival_times_in_output. The
entries give the rate of tsunamis with maxima exceeding tsunami_maxima_in_output, and arrival time before arrival_times_in_output.
}
\description{
Interface to the fortran routines
}
\examples{
maxima = runif(100)
arrival_times = runif(100)
scenario_rates = rep(0.1, length=100)
tsunami_maxima_in_output = seq(0, 1, len=11)
arrival_times_in_output = seq(0, 1, len=9)
exrate_matrix = exceedance_rate_given_maxima_and_arrival_time(
    maxima,
    arrival_times,
    scenario_rates,
    tsunami_maxima_in_output,
    arrival_times_in_output)

# Compute expected solution
back_computed_sol = exrate_matrix * 0
for(i in 1:ncol(exrate_matrix)){
    for(j in 1:nrow(exrate_matrix)){
        back_computed_sol[j,i] = sum(scenario_rates[ 
            (arrival_times < arrival_times_in_output[i] &
             maxima > tsunami_maxima_in_output[j])])
    }
}
# Check it worked
stopifnot(all(abs(back_computed_sol - exrate_matrix) <= 1.0e-06*exrate_matrix))

}
